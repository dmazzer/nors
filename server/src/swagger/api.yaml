swagger: '2.0'
info:
  version: 1.0.0
  contact:
    url: 'http://www.github.com/dmazzer/nors'
    email: dmazzer@gmail.com
    name: Daniel Mazzer
  description: >
    "NORS project rest API documentation.
    Learn about NORS on [Github](http://www.github.com/dmazzer/nors).

    For this sample, you can use the api key `special-key`
    to test the authorization filters"
  termsOfService: 'http://www.github.com/dmazzer/nors'
  license:
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
    name: Apache 2.0
  title: NORS Rest API
host: '127.0.0.1:8080'
schemes:
  - http
  - https
consumes:
  - application/json
  - text/xml

basePath: /v1

produces:
  - application/json
  - text/html
paths:
  '/clients/{client_id}':
    get:
      operationId: controllers.clients_controller.clients_client_id_get
      tags:
        - clients_controller
      description: |
        Retrieve Sensor Data from a Remote Client ID.
      summary: Sensor Data from Remote Clients
      parameters:
        - default: 10
          name: limit
          maximum: 10000
          in: query
          description: Number of sensor readings data do retrieve
          minimum: 1
          required: false
          type: integer
        - in: path
          description: ID of the Remote Client
          required: true
          name: client_id
          type: string
      responses:
        '200':
          schema:
            items:
              $ref: '#/definitions/SensorData'
            title: Sensor Data
          description: Sensor data from Remote Client ID
    post:
      operationId: controllers.clients_controller.clients_client_id_post
      tags:
        - clients_controller
      parameters:
        - in: path
          description: ID of the Remote Client
          required: true
          name: client_id
          type: string
        - in: body
          schema:
            $ref: '#/definitions/SensorData'
          description: The sensor data JSON you want to post
          required: true
          name: sensor_data
      responses:
        '200':
          description: Success
  /server/info:
    get:
      operationId: controllers.server_controller.server_info_get
      tags:
        - server_controller
      summary: Server Information
      description: |
        Retrieve remote server information.
      responses:
        '200':
          schema:
            items:
              $ref: '#/definitions/Server'
            title: Server Information
            type: array
          description: server info
  /clients:
    get:
      operationId: controllers.clients_controller.clients_get
      tags:
        - clients_controller
      description: |
        Retrieve known Remote Clients from server.
      summary: Available Remote Clients
      parameters:
        - default: 10
          name: limit
          maximum: 1000
          in: query
          description: Number of Remote Clients data do retrieve
          minimum: 1
          required: false
          type: integer
      responses:
        '200':
          schema:
            items:
              $ref: '#/definitions/RemoteClient'
            title: Remote Client
            type: array
          description: Remote Client IDs response


definitions:
  Server:
    properties:
      connection_port:
        type: string
      server_name:
        type: string
      connection_ip:
        type: string
      server_id:
        type: string
    type: object
  RemoteClient:
    properties:
      client_id:
        type: string
    type: object
  SensorData:
    properties:
      sensor_data:
        type: string
    type: object