---
swagger: "2.0"
info:
  description: |
    "NORS project rest API documentation.\n\nLearn about NORS on [Github](http://www.github.com/dmazzer/nors).\n\
    \nFor this sample, you can use the api key `special-key` to test the authorization\
    \ filters\n"
  version: "1.0.0"
  title: "NORS Rest API"
  termsOfService: "http://www.github.com/dmazzer/nors"
  contact:
    name: "Daniel Mazzer" 
    url: "http://www.github.com/dmazzer/nors"
    email: "dmazzer@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "127.0.0.1:8080"
basePath: "/v1"
schemes:
- "http"
- "https"
consumes:
- "application/json"
- "text/xml"
produces:
- "application/json"
- "text/html"
paths:
  /server/info:
    get:
      tags:
      - "server_controller"
      summary: "Server Information"
      description: "Retrieve remote server information.\n"
      operationId: "controllers.server_controller.server_info_get"
      responses:
        200:
          description: "server info"
          schema:
            type: "array"
            title: "Server Information"
            items:
              $ref: "#/definitions/Server"
  /clients:
    get:
      tags:
      - "default_controller"
      summary: "Available Remote Clients"
      description: "Retrieve known Remote Clients from server.\n"
      operationId: "controllers.default_controller.clients_get"
      parameters:
      - name: "limit"
        in: "query"
        description: "Number of Remote Clients data do retrieve"
        required: false
        type: "integer"
        default: 10
        maximum: 1000.0
        minimum: 1.0
      responses:
        200:
          description: "Remote Client IDs response"
          schema:
            type: "array"
            title: "Remote Client"
            items:
              $ref: "#/definitions/RemoteClient"
  /clients/{client_id}:
    get:
      tags:
      - "default_controller"
      summary: "Sensor Data from Remote Clients"
      description: "Retrieve Sensor Data from a Remote Client ID.\n"
      operationId: "controllers.default_controller.clients_client_id_get"
      parameters:
      - name: "limit"
        in: "query"
        description: "Number of sensor readings data do retrieve"
        required: false
        type: "integer"
        default: 10
        maximum: 10000.0
        minimum: 1.0
      - name: "client_id"
        in: "path"
        description: "ID of the Remote Client"
        required: true
        type: "string"
      responses:
        200:
          description: "Sensor data from Remote Client ID"
          schema:
            title: "Sensor Data"
            $ref: "#/definitions/SensorData"
    post:
      tags:
      - "default_controller"
      operationId: "controllers.default_controller.clients_client_id_post"
      parameters:
      - name: "client_id"
        in: "path"
        description: "ID of the Remote Client"
        required: true
        type: "string"
      - in: "body"
        name: "sensor_data"
        description: "The sensor data JSON you want to post"
        required: true
        schema:
          $ref: "#/definitions/SensorData"
      responses:
        200:
          description: "Success"
definitions:
  Server:
    type: "object"
    properties:
      server_id:
        type: "string"
      server_name:
        type: "string"
      connection_ip:
        type: "string"
      connection_port:
        type: "string"
  RemoteClient:
    type: "object"
    properties:
      client_id:
        type: "string"
  SensorData:
    type: "object"
    properties:
      sensor_data:
        type: "string"
